- content_for :title do
  Nectar | 
  - if goal.persisted?
    Edit Goal: 
  - else
    Add Goal: 
  = [ provider.title, metric.title ].join(" - ")
-#:javascript
  $(document).ready(function() {
    var new_goal_value = $('input:checked[name="goal[new_goal]"]').val() == "true";
    
    $('#new').toggle(new_goal_value);
    $('#existing').toggle(!new_goal_value);
  });
.container
  .row
    .page-header
      %h1
        - if goal.persisted?
          Edit Goal
        - else
          Add Goal
    %p
      = image_tag("logos/#{provider.name}.png", alt: "#{provider.title} Logo", class: "small")
      %br
      Integration: 
      = provider.title
      %br
      Metric: 
      = metric.title
      %br
      Description: 
      = metric.description
    %br
    %br
  .row
    .col-lg-6
      -#= simple_form_for goal  do |f|
        .radio
          = f.radio_button :new_goal, true, {:checked => true}
          = f.label :newgoal, "Create a new Beeminder goal"
        .radio
          = f.radio_button :new_goal, false
          = f.label :existinggoal, "Use an existing goal"
        :javascript
          $('input[name="goal[new_goal]"]').click(function() {
            var new_goal_value = $('input:checked[name="goal[new_goal]"]').val() == "true";
            
            $('#new').toggle(new_goal_value);
            $('#existing').toggle(!new_goal_value);
          });
        #new
          .form-group
            = f.input :slug, {as: :string, label: "Short Goal Name:", placeholder: provider.title.downcase, input_html: {class: "form-control"}}
          .form-group
            = f.input :title, {as: :string, label: "Long Goal Name:", placeholder: [ provider.title, metric.title ].join(" "), input_html: {class: "form-control"}}
          .form-group
            = f.label :beeminder_types, "Select one of the Beeminder goal types:"
            = f.select :type, available_types, {prompt: "Select Beeminder goal type"}, { class: "form-control" }
          .form-group
            = f.input :rate, {as: :integer, label: "Pledge Value:", hint: "E.g *Number* of steps per day.", input_html: {class: "form-control"}}
          .form-group
            = f.input :gunits, {as: :string, label: "Pledge Units:", placeholder: "steps", hint: "E.g Number of *steps* per day.", input_html: {class: "form-control"}}
          .form-group
            = f.label :rate_units, "Select one of the Pledge Rates:"
            = f.select :runits, pledge_rates, {prompt: "Select a Pledge Rate"}, { class: "form-control" }
        #existing
          .form-group
            = f.label :beeminder_slug, "Select one of your Beeminder goals:"
            = f.select :slug, available_goal_slugs, { prompt: "Select Beeminder slug"}, { class: "form-control" }
        = f.fields_for :params do |pf|
          - extra_configuration = self.instance_exec(credential.client, f.object.params, pf, &metric.configuration)
          - extra_configuration.each do |(label, input)|
            .form-group
              = pf.label label
              = input
          - template_name = "goals/#{provider.name}_#{metric.key}"
          - if lookup_context.template_exists?(template_name, [], true)
            = render template_name, pf: pf, params: f.object.params
        .checkbox
          = f.input :active, {label: "Enabled"}
        = f.button :submit, {input_html: {class: %i(btn btn-default)}}
      = form_for goal  do |f|
        = f.hidden_field :provider_name, value: provider.name
        = f.hidden_field :metric_key, value: metric.key
        .form-group
          = f.label :beeminder_slug, "Select one of your Beeminder goals:"
          = f.select :slug, available_goal_slugs, { prompt: "Select Beeminder Slug"},{ class: "form-control" }
        .form-group
          = f.check_box :active
          = f.label :active, "Enabled"
        = f.fields_for :params do |pf|
          - extra_configuration = self.instance_exec(credential.client, f.object.params, pf, &metric.configuration) rescue []
          - extra_configuration.each do |(label, input)|
            .form-group
              = pf.label label
              = input
          - template_name = "goals/#{provider.name}_#{metric.key}"
          - if lookup_context.template_exists?(template_name, [], true)
            = render template_name, pf: pf, params: f.object.params
        = f.submit "Save", class: %i(btn btn-default)
      = goal.delete_link if goal.persisted?
    .col-lg-6
      %h3 Current Score
      %table.table.table-responsive#current-score
        %thead
          %tr
            %td Timestamp
            %td Value
        %tbody
          - goal.safe_fetch_scores.each do |datapoint|
            %tr
              %td= datapoint.timestamp || "Now"
              %td= datapoint.value
    - if goal.persisted? && goal.all_scores.present?
      .col-lg-6
        %h3 Previous Datapoints
        %table.table.table-responsive#current-score
          %thead
            %tr
              %td Timestamp
              %td Value
          %tbody
            - goal.all_scores.each do |datapoint|
              %tr
                %td= datapoint.timestamp
                %td= datapoint.value

